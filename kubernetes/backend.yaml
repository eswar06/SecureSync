apiVersion: v1
kind: Secret
metadata:
  name: backend-secrets
  namespace: securesync-pro
type: Opaque
data:
  jwt-secret: c3VwZXJzZWNyZXRqd3RrZXl0aGF0aXN2ZXJ5bG9uZ2FuZHNlY3VyZQ== # supersecretjwtkeythatisverylongandsecure
  openai-api-key: ""  # Add your OpenAI API key here (base64 encoded)
  encryption-key: ""  # Add your encryption key here (base64 encoded)
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-config
  namespace: securesync-pro
data:
  NODE_ENV: "production"
  PORT: "5000"
  MONGODB_URI: "mongodb://securesync:securepass@mongodb-service:27017/securesync"
  REDIS_URL: "redis://:securepassword@redis-service:6379"
  CORS_ORIGIN: "https://securesync.example.com"
  LOG_LEVEL: "info"
  RATE_LIMIT_WINDOW: "900000"  # 15 minutes
  RATE_LIMIT_MAX: "100"
  MAX_FILE_SIZE: "100MB"
  SESSION_TIMEOUT: "3600000"  # 1 hour
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: securesync-pro
  labels:
    app: backend
    tier: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: backend
      tier: backend
  template:
    metadata:
      labels:
        app: backend
        tier: backend
    spec:
      containers:
      - name: backend
        image: securesync/backend:latest
        ports:
        - containerPort: 5000
        envFrom:
        - configMapRef:
            name: backend-config
        env:
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: backend-secrets
              key: jwt-secret
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: backend-secrets
              key: openai-api-key
        - name: ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: backend-secrets
              key: encryption-key
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: uploads
          mountPath: /app/uploads
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: uploads
        persistentVolumeClaim:
          claimName: backend-uploads-pvc
      - name: logs
        persistentVolumeClaim:
          claimName: backend-logs-pvc
      imagePullSecrets:
      - name: registry-secret
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: backend-uploads-pvc
  namespace: securesync-pro
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Gi
  storageClassName: fast-ssd
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: backend-logs-pvc
  namespace: securesync-pro
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 20Gi
  storageClassName: fast-ssd
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: securesync-pro
  labels:
    app: backend
    tier: backend
spec:
  ports:
  - port: 5000
    targetPort: 5000
  selector:
    app: backend
    tier: backend
  type: ClusterIP
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: backend-hpa
  namespace: securesync-pro
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: backend
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
